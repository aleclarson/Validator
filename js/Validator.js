// Generated by CoffeeScript 1.12.4
var NamedFunction, Validator, define, isConstructor, setType, steal;

NamedFunction = require("NamedFunction");

isConstructor = require("isConstructor");

setType = require("setType");

steal = require("steal");

define = Object.defineProperty;

Validator = NamedFunction("Validator", function(name, config) {
  var key, self, value;
  if (isConstructor(name, Object)) {
    config = name;
    name = null;
  } else if (config === void 0) {
    config = {};
  }
  if (!isConstructor(config, Object)) {
    throw TypeError("'config' must be an Object!");
  }
  self = Object.create(Validator.prototype);
  if (name || (name = steal(config, "name"))) {
    if (isConstructor(name, String)) {
      define(self, "displayName", {
        value: name
      });
    } else if (isConstructor(name, Function)) {
      define(self, "displayName", {
        get: name
      });
    }
  }
  for (key in config) {
    value = config[key];
    define(self, key, {
      value: value,
      configurable: true
    });
  }
  return self;
});

module.exports = Validator;
